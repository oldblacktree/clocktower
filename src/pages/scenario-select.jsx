import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { scenariosStandart } from "../data/roles";

export default function ScenarioSelect({ setSelectedRoles }) {
  const navigate = useNavigate();
  const [customScenarios, setCustomScenarios] = useState([]);
  const [selectedScenarioId, setSelectedScenarioId] = useState(null);

  const handleScenarioClick = (id) => {
    // –µ—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Ç–æ–º—É –∂–µ —Å—Ü–µ–Ω–∞—Ä–∏—é ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
    if (selectedScenarioId === id) {
      setSelectedScenarioId(null);
    } else {
      setSelectedScenarioId(id);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏–∑ localStorage –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    const stored = JSON.parse(localStorage.getItem("customScenarios")) || [];
    setCustomScenarios(stored);
  }, []);

  // –û—Ç–∫—Ä—ã—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
  const openScenario = (scenario) => {
    setSelectedRoles(scenario.roles);
    navigate("/scenario");
  };

  // –£–¥–∞–ª–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π
  const deleteScenario = (id) => {
    const confirmDelete = window.confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π?");
    if (!confirmDelete) return;

    const updated = customScenarios.filter((sc) => sc.id !== id);
    setCustomScenarios(updated);
    localStorage.setItem("customScenarios", JSON.stringify(updated));
  };

  const selectScenario = (scenario) => {
    setSelectedRoles(scenario.roles);
    navigate("/scenario");
  };

  const createCustomScenario = () => {
    setSelectedRoles([]);
    navigate("/scenario");
  };

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold text-yellow-400 mb-4">
        –í—ã–±–µ—Ä–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π
      </h1>

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ */}
      {customScenarios.length > 0 && (
        <div>
          <h2 className="text-lg font-semibold text-gray-200 mb-2">
            –ú–æ–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
            {customScenarios.map((scenario) => (
              <>
                <div
                  key={scenario.id}
                  className="text-white rounded-xl transition flex"
                >
                  <div
                    className="w-80 p-2 bg-gray-800 "
                    onClick={() => handleScenarioClick(scenario.id)}
                  >
                    <h3 className="text-xl font-semibold">{scenario.name}</h3>
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
                  <button
                    onClick={(e) => {
                      // e.stopPropagation(); // —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª –≤—ã–±–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è
                      deleteScenario(scenario.id);
                    }}
                    className="p-2 right-2 text-gray-300 bg-red-800  transition w-20"
                    title="–£–¥–∞–ª–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π"
                  >
                    üóë
                  </button>
                </div>
                {/* –ï—Å–ª–∏ —ç—Ç–æ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–±—Ä–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ */}
                {selectedScenarioId === scenario.id && (
                  <div className=" flex gap-2">
                    <button
                      onClick={(e) => {
                        e.stopPropagation(); // —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                        debugger;
                        openScenario(scenario);
                      }}
                      className="flex-1 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-500 transition"
                    >
                      –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–æ–ª–∏
                    </button>

                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                      }}
                      className="flex-1 py-2 rounded-lg bg-yellow-600 hover:bg-yellow-500 transition"
                    >
                      –í—ã–±—Ä–∞—Ç—å
                    </button>
                  </div>
                )}
              </>
            ))}
          </div>
        </div>
      )}

      <div
        onClick={createCustomScenario}
        className="p-4 bg-indigo-800 text-white rounded-xl cursor-pointer hover:bg-indigo-700 transition"
      >
        <h2 className="text-xl font-semibold">–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π</h2>
      </div>
    </div>
  );
}
